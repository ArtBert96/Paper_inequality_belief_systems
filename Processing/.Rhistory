ggtitle("US 0") +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.margin = margin(2,2,2,2, "mm"))
ggsave(here("Output", "Supplemental", "ega_us0.jpg"),
plot_ega_us_0, height = 6, width = 6)
plot_ega_us_1 = comp_egas$individual.plots$`US_1` +
ggtitle("US 1") +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.margin = margin(2,2,2,2, "mm"))
ggsave(here("Output", "Supplemental", "ega_us1.jpg"),
plot_ega_us_1, height = 6, width = 6)
plot_ega_nl_0 = comp_egas$individual.plots$`NL_0` +
ggtitle("NL 0") +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.margin = margin(2,2,2,2, "mm"))
ggsave(here("Output", "Supplemental", "ega_nl0.jpg"),
plot_ega_nl_0, height = 6, width = 6)
plot_ega_nl_1 = comp_egas$individual.plots$`NL_1` +
ggtitle("NL 1") +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.margin = margin(2,2,2,2, "mm"))
ggsave(here("Output", "Supplemental", "ega_nl1.jpg"),
plot_ega_nl_1, height = 6, width = 6)
#Full plot
comp_egas_full = comp_egas$comparison.plot
plot_egas <- lapply(ls(pattern="^plot_ega_"), function(x) get(x))
plot_egas <- plot_egas[c(3,4,1,2)]
g_plot_egas = ggarrange(plotlist = plot_egas, ncol = 2, nrow = 2)
#Save
ggsave(here("Output", "Article", "Graphs", "ega_full.jpg"),
g_plot_egas, height = 12, width = 12)
#US
set.seed(1)
nct_us = NCT(cca_us_0, cca_us_1,
gamma = 0.5, test.edges = TRUE, edges = "all",
test.centrality = TRUE, centrality = "strength")
inputNCTgraph <- ega_us0$network - ega_us1$network
inputNCTgraph[upper.tri(inputNCTgraph)][which(nct_us$einv.pvals$`p-value` >= .05)] <- 0
inputNCTgraph <- forceSymmetric(inputNCTgraph)
pdf(here("Output", "Supplemental", "nct_us.pdf"))
qgraph(inputNCTgraph,
#layout = "spring",
edge.labels = TRUE, esize = 1)
dev.off()
#NL
set.seed(1)
nct_nl = NCT(cca_nl_0, cca_nl_1,
gamma = 0.5, test.edges = TRUE, edges = "all",
test.centrality = TRUE, centrality = "strength")
inputNCTgraph <- ega_nl0$network - ega_nl1$network
inputNCTgraph[upper.tri(inputNCTgraph)][which(nct_nl$einv.pvals$`p-value` >= .05)] <- 0
inputNCTgraph <- forceSymmetric(inputNCTgraph)
pdf(here("Output", "Supplemental", "nct_nl.pdf"))
qgraph(inputNCTgraph,
#layout = "spring",
edge.labels = TRUE, esize = 1)
dev.off()
#Regressions
m1_us = glm(cca ~ politics, data = data_us, family=binomial(link="logit"))
m2_us = glm(cca ~ politics + agegroups + sex + race + education + working + assets +
hhincome_groups + immigrant + marital + religion, data = data_us, family=binomial(link="logit"))
m3_us = glm(cca ~ agegroups + sex + race + education + working + assets +
hhincome_groups + immigrant + marital + religion, data = data_us, family=binomial(link="logit"))
#Regressions
m1_nl = glm(cca ~ politics, data = data_nl, family=binomial(link="logit"))
m2_nl = glm(cca ~ politics + agegroups + sex + race + education + working + assets +
hhincome_groups + immigrant + marital + religion, data = data_nl, family=binomial(link="logit"))
m3_nl = glm(cca ~ agegroups + sex + race + education + working + assets +
hhincome_groups + immigrant + marital + religion, data = data_nl, family=binomial(link="logit"))
#Output
tab_model(list(m1_us, m2_us, m3_us, m1_nl, m2_nl, m3_nl),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1-US", "M2-US", "M3-US", "M1-NL", "M2-NL", "M3-NL"),
collapse.ci = TRUE,
show.aic = TRUE,
#show.reflvl = TRUE,
title = "Table. Logistic regression models on inequality belief membership - US & NL",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Article", "Tables", "Sociodemographic_Determinants.html")
)
??tab_model
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkComparisonTest, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot)
#Output
tab_model(list(m1_us, m2_us, m3_us, m1_nl, m2_nl, m3_nl),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1-US", "M2-US", "M3-US", "M1-NL", "M2-NL", "M3-NL"),
collapse.ci = TRUE,
show.aic = TRUE,
#show.reflvl = TRUE,
title = "Table. Logistic regression models on inequality belief membership - US & NL",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Article", "Tables", "Sociodemographic_Determinants.html")
)
#Output
sjPlot:tab_model(list(m1_us, m2_us, m3_us, m1_nl, m2_nl, m3_nl),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1-US", "M2-US", "M3-US", "M1-NL", "M2-NL", "M3-NL"),
collapse.ci = TRUE,
show.aic = TRUE,
#show.reflvl = TRUE,
title = "Table. Logistic regression models on inequality belief membership - US & NL",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Article", "Tables", "Sociodemographic_Determinants.html")
)
#Output
sjPlot::tab_model(list(m1_us, m2_us, m3_us, m1_nl, m2_nl, m3_nl),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1-US", "M2-US", "M3-US", "M1-NL", "M2-NL", "M3-NL"),
collapse.ci = TRUE,
show.aic = TRUE,
#show.reflvl = TRUE,
title = "Table. Logistic regression models on inequality belief membership - US & NL",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Article", "Tables", "Sociodemographic_Determinants.html")
)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo = FALSE,
fig.align="center",
out.width='\\textwidth'
)
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkComparisonTest, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot, psych, nFactors)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
conflict_prefer("igraph", "compose")
options(max.print=999999)
options(scipen=999)
#Load
rm(list = ls())
load(here("Output",  "230515 - Data_Databases.RData"))
labels_data = sjlabelled::get_label(data_us) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
`colnames<-`(c("variable", "label")) %>%
slice(19:35)
labels_data %>%
kable()
data_us_skim  = data_us %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
data_nl_skim  = data_nl %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
cca_group_us <- cca(data_us_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
cca_group_us$modules
cca_group_us$membership
data_us_cca
View(data_us_cca)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo = FALSE,
fig.align="center",
out.width='\\textwidth'
)
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkComparisonTest, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot, psych, nFactors)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
conflict_prefer("igraph", "compose")
options(max.print=999999)
options(scipen=999)
#Load
rm(list = ls())
load(here("Output",  "230515 - Data_Databases.RData"))
labels_data = sjlabelled::get_label(data_us) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
`colnames<-`(c("variable", "label")) %>%
slice(19:35)
labels_data %>%
kable()
data_us_skim  = data_us %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
data_nl_skim  = data_nl %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
#CCA applied to ISSP US
cca_group_us <- cca(data_us_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
us_plot_cca_1 = plot(cca_group_us, 1)
us_plot_cca_3 = plot(cca_group_us, 3)
#Add membership to US
data_us_cca$cca = cca_group_us$membership
data_us$cca = cca_group_us$membership
#Prepare CCA-driven dataframe for EGA
cca_us_1 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_us_0 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 3) %>%
select(p_income:ib_sex)
#Filter out second CCA class
data_us_cca = data_us_cca %>%
filter(cca != 2)
#Rename CCA groups
data_us = data_us %>%
mutate(cca = ifelse(cca=="3", 0, 1))
data_us_cca = data_us_cca %>%
mutate(cca = ifelse(cca=="3", 0, 1))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo = FALSE,
fig.align="center",
out.width='\\textwidth'
)
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkComparisonTest, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot, psych, nFactors)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
conflict_prefer("igraph", "compose")
options(max.print=999999)
options(scipen=999)
#Load
rm(list = ls())
load(here("Output",  "230515 - Data_Databases.RData"))
labels_data = sjlabelled::get_label(data_us) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
`colnames<-`(c("variable", "label")) %>%
slice(19:35)
labels_data %>%
kable()
data_us_skim  = data_us %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
data_nl_skim  = data_nl %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
#CCA applied to ISSP US
cca_group_us <- cca(data_us_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
us_plot_cca_1 = plot(cca_group_us, 1)
us_plot_cca_3 = plot(cca_group_us, 3)
#Add membership to US
data_us_cca$cca = cca_group_us$membership
data_us$cca = cca_group_us$membership
#Prepare CCA-driven dataframe for EGA
cca_us_1 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_us_0 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 3) %>%
select(p_income:ib_sex)
#Filter out second CCA class
data_us_cca = data_us_cca %>%
filter(cca != 2)
#Rename CCA groups
data_us = data_us %>%
mutate(cca = ifelse(cca=="3", 0, 1))
data_us_cca = data_us_cca %>%
mutate(cca = ifelse(cca=="3", 0, 1))
cca_group_nl
#CCA applied to ISSP NL
cca_group_nl <- cca(data_nl_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
nl_plot_cca_1 = plot(cca_group_nl, 1)
nl_plot_cca_3 = plot(cca_group_nl, 3)
cca_group_nl$membership
View(data_nl)
View(data_nl_cca)
cca_group_nl
cca_group_nl$membership
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo = FALSE,
fig.align="center",
out.width='\\textwidth'
)
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkComparisonTest, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot, psych, nFactors)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
conflict_prefer("igraph", "compose")
options(max.print=999999)
options(scipen=999)
#Load
rm(list = ls())
load(here("Output",  "230515 - Data_Databases.RData"))
labels_data = sjlabelled::get_label(data_us) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
`colnames<-`(c("variable", "label")) %>%
slice(19:35)
labels_data %>%
kable()
data_us_skim  = data_us %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
data_nl_skim  = data_nl %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"),
agegroups, sex, race, education, working, assets,
hhincome_groups, immigrant, marital, religion) %>%
mutate_if(is.character, as.numeric) %>%
mutate_if(is.factor, as.numeric) %>%
as.data.frame() %>%
stargazer(type = "text")
#CCA applied to ISSP US
cca_group_us <- cca(data_us_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
us_plot_cca_1 = plot(cca_group_us, 1)
us_plot_cca_3 = plot(cca_group_us, 3)
#Add membership to US
data_us_cca$cca = cca_group_us$membership
data_us$cca = cca_group_us$membership
#Prepare CCA-driven dataframe for EGA
cca_us_1 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_us_0 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 3) %>%
select(p_income:ib_sex)
#Filter out second CCA class
data_us_cca = data_us_cca %>%
filter(cca != 2)
#Rename CCA groups
data_us = data_us %>%
mutate(cca = ifelse(cca=="3", 0, 1))
data_us_cca = data_us_cca %>%
mutate(cca = ifelse(cca=="3", 0, 1))
#CCA applied to ISSP NL
cca_group_nl <- cca(data_nl_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
nl_plot_cca_1 = plot(cca_group_nl, 1)
nl_plot_cca_3 = plot(cca_group_nl, 3)
#Add membership to NL
data_nl_cca$cca = cca_group_nl$membership
data_nl$cca = cca_group_nl$membership
#Prepare CCA-driven dataframe for EGA
cca_nl_1 = data_nl_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_nl_0 = data_nl_cca %>%
as.data.frame() %>%
filter(cca == 3) %>%
select(p_income:ib_sex)
#Filter out second CCA class
data_nl_cca = data_nl_cca %>%
filter(cca != 2)
#Rename CCA groups
data_nl = data_nl %>%
mutate(cca = ifelse(cca=="3", 1, 0))
data_nl_cca = data_nl_cca %>%
mutate(cca = ifelse(cca=="3", 1, 0))
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkComparisonTest, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot, psych, nFactors,
ggcorrplot)
corr_us_0 <- round(cor(cca_us_0), 1)
corr_us_1 <- round(cor(cca_us_1), 1)
p.mat_us_0 <- cor_pmat(cca_us_0)
p.mat_us_1 <- cor_pmat(cca_us_1)
ggcorrplot(corr_us_0, hc.order = TRUE, outline.col = "white")
ggcorrplot(corr_us_1, hc.order = TRUE, outline.col = "white")
ggcorrplot(corr_us_0, hc.order = TRUE, outline.col = "white")
ggcorrplot(corr_us_1, hc.order = TRUE, outline.col = "white")
ggcorrplot(corr_us_1, outline.col = "white")
ggcorrplot(corr_us_0, outline.col = "white")
ggcorrplot(corr_us_0, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_nice,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(corr_us_0, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_bw,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(corr_us_0, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_minimal,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(corr_us_1, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_minimal,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(corr_us_0, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr_us_1, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr_us_1, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr_us_0, hc.order = TRUE, type = "lower",
outline.col = "white")
#Cor matrix
corr_nl_0 <- round(cor(cca_nl_0), 1)
corr_nl_1 <- round(cor(cca_nl_1), 1)
# Compute a matrix of correlation p-values
p.mat_nl_0 <- cor_pmat(cca_nl_0)
p.mat_nl_1 <- cor_pmat(cca_nl_1)
# Visualization
ggcorrplot(corr_nl_0, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr_nl_1, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr_nl_1, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr_nl_0, hc.order = TRUE, type = "lower",
outline.col = "white")
