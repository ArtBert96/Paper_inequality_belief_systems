#Filter out second CCA class and rename CCA groups
data_us = data_us %>%
filter(cca == 1 | cca == 3) %>%
mutate(cca = ifelse(cca=="3", 1, 2))
data_us_cca = data_us_cca %>%
filter(cca == 1 | cca == 3) %>%
mutate(cca = ifelse(cca=="3", 1, 2))
#Prepare CCA-driven dataframe for EGA
cca_us_1 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_us_2 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 2) %>%
select(p_income:ib_sex)
#CCA applied to ISSP NL
cca_group_nl <- cca(data_nl_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
nl_plot_cca_1 = plot(cca_group_nl, 1)
nl_plot_cca_2 = plot(cca_group_nl, 4)
#Add membership to NL
data_nl_cca$cca = cca_group_nl$membership
data_nl$cca = cca_group_nl$membership
#Filter out second CCA class and rename CCA groups
data_nl = data_nl %>%
filter(cca == 1 | cca == 4) %>%
mutate(cca = ifelse(cca=="4", 2, 1))
data_nl_cca = data_nl_cca %>%
filter(cca == 1 | cca == 4) %>%
mutate(cca = ifelse(cca=="4", 2, 1))
#Prepare CCA-driven dataframe for EGA
cca_nl_1 = data_nl_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_nl_2 = data_nl_cca %>%
as.data.frame() %>%
filter(cca == 2) %>%
select(p_income:ib_sex)
#Full sample
data_final = data_us %>%
bind_rows(data_nl)
frq(data, country)
frq(data_final, country)
#Save
save(data_final, data_us, data_us_cca, data_nl, data_nl_cca,
file = here("Output",  "231018 - Data_Databases.RData"))
data_us_skim  = data_us %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"))
#save
save(data_us_skim, file = here("Output",  "descriptives_us.RData"))
data_nl_skim  = data_nl %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"))
#save
save(data_nl_skim, file = here("Output",  "descriptives_nl.RData"))
853:1618=x:100
853*100/1618
765*100/1618
1327*100/2501
1174*100/2501
100-53.1
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo = FALSE,
fig.align="center",
out.width='\\textwidth'
)
library(pacman)
p_load(tidyverse, janitor, here, haven, labelled, sjmisc, skimr, ggplot2, jtools,
stargazer, qgraph, Matrix, igraph, sna, NetworkComparisonTest, bootnet,
rio, foreign, matrixcalc, corclass, NetworkToolbox, conflicted,
EGAnet, texreg, ggpubr, lavaan, ltm, kableExtra, sjPlot, psych, nFactors,
ggcorrplot, ggeffects)
#Packages conflicts
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
conflict_prefer("labelled", "to_factor")
conflict_prefer("igraph", "compose")
conflict_prefer("igraph", "%s%")
#Options
options(max.print=999999)
options(scipen=999)
#Load database
data = read_dta(here("Input", "data_full_stata.dta"))  %>%
clean_names()
#Rename variables
data_con = data %>%
rename(ib_weafam = belief_1,
ib_edupar = belief_2,
ib_edu = belief_3,
ib_work = belief_4,
ib_people = belief_5,
ib_migra = belief_7,
ib_race = belief_6,
ib_relig = belief_8,
ib_sex = belief_9,
p_income = ineq_post1,
p_wealth = ineq_post2,
p_poor = ineq_post3,
p_black = ineq_post4,
b_merit = ineq_pre1,
b_diversity = ineq_pre2,
b_equality = ineq_pre3,
att_redist = ineq_post5)
#Select variables
data_con = data_con %>%
select(nomem_encr, survey, country, treatment,
age, agegroups, sex, race, education, peducation,
working, politics, pol5,
hhincome, immigrant, marital, religion, ladder_present,
starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"))
#Recode variables
data_cat = data_con %>%
mutate(agegroups = labelled::to_factor(agegroups),
sex = case_when(sex==1 ~ "Male",
sex==2 ~ "Female",
sex==0 ~ "Other"),
race = case_when(race==1 ~ "White",
race!=1 ~ "Other"),
education = case_when(education<=2 ~ "High school or less",
education==3 ~ "Some college",
education>=4 ~ "College or more"),
peducation = case_when(peducation<=2 ~ "High school or less",
peducation==3 ~ "Some college",
peducation>=4 ~ "College or more"),
hhincome_groups = case_when(hhincome<=15000 ~ "Low",
hhincome>15000 & hhincome<=70000 ~ "Medium",
hhincome>70000 ~ "High",
TRUE ~NA),
marital = case_when(marital==1 ~ 1,
TRUE ~ 0),
religion = case_when(religion==1 ~ "Protestant",
religion==2 ~ "Catholic",
religion==3 | religion==4 | religion==6 ~ "Other",
religion==5 | is.na(religion) ~ "None or not declared"))
#Levels
data_cat$education <- factor(data_cat$education,
levels = c("High school or less", "Some college", "College or more"))
data_cat$peducation <- factor(data_cat$peducation,
levels = c("High school or less", "Some college", "College or more"))
data_cat$hhincome_groups  <- factor(data_cat$hhincome_groups ,
levels = c("Low", "Medium", "High"))
#Drop variable
data_cat = data_cat %>%
select(-peducation)
#Check variables
skim(data_cat)
names(data_cat)
#Filter US
data_us = data_cat %>%
filter(country==1) %>%
na.omit()
data_us_cca = data_us %>%
select(p_income:ib_sex)
#Filter NL
data_nl = data_cat %>%
filter(country==2) %>%
na.omit()
data_nl_cca = data_nl %>%
select(p_income:ib_sex)
#CCA applied to ISSP US
cca_group_us <- cca(data_us_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
us_plot_cca_1 = plot(cca_group_us, 1)
us_plot_cca_2 = plot(cca_group_us, 3)
#Add membership to US
data_us_cca$cca = cca_group_us$membership
data_us$cca = cca_group_us$membership
#Filter out second CCA class and rename CCA groups
data_us = data_us %>%
filter(cca == 1 | cca == 3) %>%
mutate(cca = ifelse(cca=="3", 1, 2))
data_us_cca = data_us_cca %>%
filter(cca == 1 | cca == 3) %>%
mutate(cca = ifelse(cca=="3", 1, 2))
#Prepare CCA-driven dataframe for EGA
cca_us_1 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_us_2 = data_us_cca %>%
as.data.frame() %>%
filter(cca == 2) %>%
select(p_income:ib_sex)
#CCA applied to ISSP NL
cca_group_nl <- cca(data_nl_cca, filter.significance = TRUE, filter.value = 0.01,
zero.action = c("ownclass"))
#Preliminary plots
nl_plot_cca_1 = plot(cca_group_nl, 1)
nl_plot_cca_2 = plot(cca_group_nl, 4)
#Add membership to NL
data_nl_cca$cca = cca_group_nl$membership
data_nl$cca = cca_group_nl$membership
#Filter out second CCA class and rename CCA groups
data_nl = data_nl %>%
filter(cca == 1 | cca == 4) %>%
mutate(cca = ifelse(cca=="4", 2, 1))
data_nl_cca = data_nl_cca %>%
filter(cca == 1 | cca == 4) %>%
mutate(cca = ifelse(cca=="4", 2, 1))
#Prepare CCA-driven dataframe for EGA
cca_nl_1 = data_nl_cca %>%
as.data.frame() %>%
filter(cca == 1) %>%
select(p_income:ib_sex)
cca_nl_2 = data_nl_cca %>%
as.data.frame() %>%
filter(cca == 2) %>%
select(p_income:ib_sex)
#Full sample
data_final = data_us %>%
bind_rows(data_nl)
frq(data, country)
frq(data_final, country)
#Save
save(data_final, data_us, data_us_cca, data_nl, data_nl_cca,
file = here("Output",  "231018 - Data_Databases.RData"))
data_us_skim  = data_us %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"))
#save
save(data_us_skim, file = here("Output",  "descriptives_us.RData"))
data_nl_skim  = data_nl %>%
select(starts_with("p_"),
starts_with("b_"),
starts_with("ib_"),
starts_with("att_"))
#save
save(data_nl_skim, file = here("Output",  "descriptives_nl.RData"))
#Cor matrix
corr_us_1 <- round(cor(cca_us_1), 1)
corr_us_2 <- round(cor(cca_us_2), 1)
# Compute a matrix of correlation p-values
p.mat_us_1 <- cor_pmat(cca_us_1)
p.mat_us_2 <- cor_pmat(cca_us_2)
# Visualization
cor_m_us_1 = ggcorrplot(corr_us_1, type = "lower", legend.title	= " ",
outline.col = "white", colors = c( "red", "white", "blue")) +
ggtitle("US1") +
theme(plot.title = element_text(size=20, hjust = 0),
plot.margin = margin(2,2,2,2, "mm"),
axis.text.x = element_text(margin=margin(-2,0,0,0)),  # Order: top, right, bottom, left
axis.text.y = element_text(margin=margin(0,-2,0,0))) +
geom_vline(xintercept=1:ncol(corr_us_1)-0.5, colour="white", size=2) +
geom_hline(yintercept=1:ncol(corr_us_1)-0.5, colour="white", size=2)
cor_m_us_2 = ggcorrplot(corr_us_2, type = "lower", legend.title	= " ",
outline.col = "white", colors = c( "red", "white", "blue")) +
ggtitle("US2") +
theme(plot.title = element_text(size=20, hjust = 0),
plot.margin = margin(2,2,2,2, "mm"),
axis.text.x = element_text(margin=margin(-2,0,0,0)),  # Order: top, right, bottom, left
axis.text.y = element_text(margin=margin(0,-2,0,0))) +
geom_vline(xintercept=1:ncol(corr_us_1)-0.5, colour="white", size=2) +
geom_hline(yintercept=1:ncol(corr_us_1)-0.5, colour="white", size=2)
cor_m_us_1
cor_m_us_2
#Cor matrix
corr_nl_1 <- round(cor(cca_nl_1), 1)
corr_nl_2 <- round(cor(cca_nl_2), 1)
# Compute a matrix of correlation p-values
p.mat_nl_1 <- cor_pmat(cca_nl_1)
p.mat_nl_2 <- cor_pmat(cca_nl_2)
# Visualization
cor_m_nl_1 = ggcorrplot(corr_nl_1, type = "lower", legend.title	= " ",
outline.col = "white", colors = c( "red", "white", "blue")) +
ggtitle("NL1") +
theme(plot.title = element_text(size=20, hjust = 0),
plot.margin = margin(2,2,2,2, "mm"),
axis.text.x = element_text(margin=margin(-2,0,0,0)),  # Order: top, right, bottom, left
axis.text.y = element_text(margin=margin(0,-2,0,0))) +
geom_vline(xintercept=1:ncol(corr_nl_1)-0.5, colour="white", size=2) +
geom_hline(yintercept=1:ncol(corr_nl_1)-0.5, colour="white", size=2)
cor_m_nl_2 = ggcorrplot(corr_nl_2, type = "lower", legend.title	= " ",
outline.col = "white", colors = c( "red", "white", "blue")) +
ggtitle("NL2") +
theme(plot.title = element_text(size=20, hjust = 0),
plot.margin = margin(2,2,2,2, "mm"),
axis.text.x = element_text(margin=margin(-2,0,0,0)),  # Order: top, right, bottom, left
axis.text.y = element_text(margin=margin(0,-2,0,0))) +
geom_vline(xintercept=1:ncol(corr_nl_2)-0.5, colour="white", size=2) +
geom_hline(yintercept=1:ncol(corr_nl_2)-0.5, colour="white", size=2)
cor_m_nl_1
cor_m_nl_2
#Multiplot
plot_cor <- lapply(ls(pattern="^cor_m_"), function(x) get(x))
plot_cor <- plot_cor[c(3,4,1,2)]
g_plot_cor = ggarrange(plotlist = plot_cor, ncol = 2, nrow = 2)
#Save
ggsave(here("Output", "Article", "Graphs", "cor_full.jpg"),
g_plot_cor, height = 12, width = 12)
#EGA
set.seed(1)
ega_us_1 <- EGA(data=cca_us_1,  model = "glasso",
plot.EGA = TRUE,
plot.args = list(
plot.type = "qgraph",
vsize = 15,
node.alpha = 0.8,
legend.position = "none", legend.size = NA,
edge.color = c("royalblue", "tomato")))
set.seed(1)
ega_us_2 <- EGA(data=cca_us_2,  model = "glasso",
plot.EGA = TRUE,
plot.args = list(
plot.type = "qgraph",
vsize = 15,
node.alpha = 0.8,
legend.position = "none", legend.size = NA,
edge.color = c("royalblue", "tomato")))
#EGA
set.seed(1)
ega_nl_1 <- EGA(data=cca_nl_1,  model = "glasso",
plot.EGA = TRUE,
plot.args = list(
plot.type = "qgraph",
vsize = 15,
node.alpha = 0.8,
legend.position = "none", legend.size = NA,
edge.color = c("royalblue", "tomato")))
set.seed(1)
ega_nl_2 <- EGA(data=cca_nl_2,  model = "glasso",
plot.EGA = TRUE,
plot.args = list(
plot.type = "qgraph",
vsize = 15,
node.alpha = 0.8,
legend.position = "none", legend.size = NA,
edge.color = c("royalblue", "tomato")))
list_data_egas <- lapply(ls(pattern="^ega_"), function(x) get(x))
list_data_egas <- list_data_egas[c(3,4,1,2)]
cca_groups = c("US1", "US2", "NL1", "NL2")
cca_groups_names = c("US1",
"US2",
"NL1",
"NL2")
comp_egas = compare.EGA.plots(
input.list = list_data_egas,
base.plot = 1,
labels = cca_groups_names,
rows = 2, columns = 2,
plot.args = list(
plot.type = "qgraph",
vsize = 15,
node.alpha = 0.8,
#edge.size	= 0.5,
legend = FALSE,
legend.position = "none",
legend.size = FALSE,
edge.color = c("royalblue", "tomato"),
plot.margin = margin(6,6,6,6, "cm")
))
#Full plot
comp_egas_full = comp_egas$comparison.plot
plot_egas <- lapply(ls(pattern="^plot_ega_"), function(x) get(x))
plot_egas <- plot_egas[c(3,4,1,2)]
g_plot_egas = ggarrange(plotlist = plot_egas, ncol = 2, nrow = 2)
#Save
ggsave(here("Output", "Supplemental", "EGA_multi_std.png"),
comp_egas$comparison.plot, height = 12, width = 12)
#Common objects
totalgroup_cols <- c("darkorange","purple2","seagreen2")
shortnames = names(cca_us_1)
cca_groups
list_data_egas
#Communities
groups_us1 = list(
" "=c(1:4,6,7),
" "=c(5,8:12),
" "=c(13:16))
groups_us2 = list(
" "=c(1:7),
" "=c(9:11),
" "=c(8,12:16))
groups_nl1 = list(
" "=c(1:5,6,7),
" "=c(8:12),
" "=c(13:16))
groups_nl2 = list(
" "=c(1:5,6,7),
" "=c(8:12),
" "=c(13:16))
png(filename  = here("Output", "Article", "Graphs" ,"EGA_multi_nostd.png"),
height = 12, width = 12, units = "cm", res = 1000)
lmat <- matrix(1:4, 2, 2)
lo <- layout(lmat, width = c(1, 1))
# US1	uniformly integrated
plot_us1_freel = qgraph(ega_us_1$network,
layout = "spring", theme = "Borkulo",
labels = shortnames, label.scale = FALSE,
cut = 0.04,
esize = 28,
title = "Uniformly integrated (US1)", title.cex = 0.7,
# edge.color = c("royalblue", "tomato"),
maximum = 1, vsize=11.0, label.cex=0.4, vTrans = 150,
groups=groups_us1, color=totalgroup_cols,
legend = FALSE, borders = FALSE)
# NL1	uniformly compartimentalized
plot_nl1_freel = qgraph(ega_nl_1$network,
layout = "spring", theme = "Borkulo",
labels = shortnames, label.scale = FALSE, repulsion = 1.1,
cut = 0.04,
esize = 28,
title = "Uniformly compartimentalized (NL1)", title.cex = 0.7,
# edge.color = c("royalblue", "tomato"),
maximum = 1, vsize=11.0, label.cex=0.4, vTrans = 150,
groups=groups_nl1, color=totalgroup_cols,
legend = FALSE, borders = FALSE)
# US2	contentiously integrated
plot_us2_freel = qgraph(ega_us_2$network,
layout = "spring", theme = "Borkulo",
labels = shortnames, label.scale = FALSE,
cut = 0.04,
esize = 28,
title = "Contentiously integrated (US2)", title.cex = 0.7,
#edge.color = c("royalblue", "tomato"),
maximum = 1, vsize=11.0, label.cex=0.4, vTrans = 150,
groups=groups_us2, color=totalgroup_cols,
legend = FALSE, borders = FALSE)
# NL2	contentiously compartimentalized
plot_nl2_freel = qgraph(ega_nl_2$network,
layout = "spring", theme = "Borkulo",
labels = shortnames, label.scale = FALSE, repulsion = 1.1,
cut = 0.04,
esize = 28,
title = "Contentiously compartimentalized (NL2)", title.cex = 0.7,
#edge.color = c("royalblue", "tomato"),
maximum = 1, vsize=11.0, label.cex=0.4, vTrans = 150,
groups=groups_nl2, color=totalgroup_cols,
legend = FALSE, borders = FALSE)
# ggtitle("NL2") +
#   theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
#             plot.margin = margin(2,2,2,2, "mm"),
#         axis.text.x = element_text(margin=margin(-2,0,0,0)),  # Order: top, right, bottom, left
#         axis.text.y = element_text(margin=margin(0,-2,0,0)))
dev.off()
### US
#Categorical variables
data_us = data_us %>%
mutate(cca_n = ifelse(cca==1, 0, 1),
working = ifelse(working==1, "Yes", "No"),
immigrant = ifelse(immigrant==1, "Yes", "No"),
marital = ifelse(marital==1, "Yes", "No"))
#Regressions
m1_us_a = glm(cca_n ~ politics, data = data_us, family=binomial(link="logit"))
m2_us_a = glm(cca_n ~ politics + agegroups + sex + race + education + working +
hhincome_groups + immigrant + marital + religion, data = data_us, family=binomial(link="logit"))
m3_us_a = glm(cca_n ~ agegroups + sex + race + education + working +
hhincome_groups + immigrant + marital + religion, data = data_us, family=binomial(link="logit"))
### NL
#Categorical variables
data_nl = data_nl %>%
mutate(cca_n = ifelse(cca==1, 0, 1),
working = ifelse(working==1, "Yes", "No"),
immigrant = ifelse(immigrant==1, "Yes", "No"),
marital = ifelse(marital==1, "Yes", "No"))
#Regressions
m1_nl_a = glm(cca_n ~ politics, data = data_nl, family=binomial(link="logit"))
m2_nl_a = glm(cca_n ~ politics + agegroups + sex + race + education + working +
hhincome_groups + immigrant + marital + religion, data = data_nl, family=binomial(link="logit"))
m3_nl_a = glm(cca_n ~ agegroups + sex + race + education + working +
hhincome_groups + immigrant + marital + religion, data = data_nl, family=binomial(link="logit"))
#Output
tab_model(list(m1_us_a, m2_us_a, m3_us_a, m1_nl_a, m2_nl_a, m3_nl_a),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("M1-US", "M2-US", "M3-US", "M1-NL", "M2-NL", "M3-NL"),
collapse.ci = TRUE,
show.aic = TRUE,
#show.reflvl = TRUE,
title = "Table. Logistic regression models on inequality belief membership - US 2 & NL 2",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Article", "Tables", "Sociodemographic_Determinants.html")
)
#Output reduced
tab_model(list(m2_us_a, m2_nl_a),
show.p = TRUE,
p.style = "stars",
p.threshold = c(0.1, 0.05, 0.01),
dv.labels = c("US", "NL"),
collapse.ci = TRUE,
show.aic = TRUE,
#show.reflvl = TRUE,
title = "Table. Logistic regression models on inequality belief membership - US 2 & NL 2",
string.pred = " ",
auto.label = FALSE,
file = here("Output", "Article", "Tables", "Sociodemographic_Determinants_Reduced.html")
)
#Predicted values
ggpredict(m2_us_a)
ggpredict(m2_nl_a)
ggpredict(m2_us_a)
ggpredict(m2_nl_a)
ggpredict(m2_us_a)
ggpredict(m2_nl_a)
